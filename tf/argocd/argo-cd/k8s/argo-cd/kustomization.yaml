bases:
- github.com/argoproj/argo-cd/manifests/cluster-install?ref=${argo_version}
namespace: argo-cd

# changes to config maps
patchesStrategicMerge:
- argocd-cm.yaml
- argo-cd-rbac.yaml
- argocd-ssh-known-hosts-cm.yaml
%{ if webhook_repo_list != "" ~}
- argo-cd-server-secret.yaml
%{ endif ~}
%{ if tolist(custom_tools) != tolist([]) ~}
- custom-tools.yaml
%{ endif ~}
- deployment-argocd-server.yaml
- deployment-dex.yaml
- deployment-redis.yaml
- deployment-repo-server.yaml
- statefulset-controller.yaml

resources:
- self.yaml
%{ if create_ingress ~}
- argo-cd-int-ingress.yaml
%{ endif ~}
%{ if create_ext_ingress ~}
- argo-cd-ingress.yaml
%{ endif ~}
- ssh-secret.yaml
- github-sso-secret.yaml
- cluster-system-applications.yaml
- cluster-applications.yaml
- system-project.yaml
%{ if additional_apps != "" ~}
- argo-cd-additional-applications.yaml
%{ endif ~}
%{ if additional_projects != "" ~}
- argo-cd-additional-projects.yaml
%{ endif ~}
%{ if external_secret_type == "eso" &&  external_secret_eso_kind == "SecretStore" ~}
- secret-store.yaml
%{ endif ~}

patches:
- target:
   kind: ClusterRoleBinding
   name: argocd-application-controller
  patch: |-
   - op: replace
     path: /subjects/0/namespace
     value: argo-cd

- target:
   kind: ClusterRoleBinding
   name: argocd-server
  patch: |-
   - op: replace
     path: /subjects/0/namespace
     value: argo-cd

# hack to pass github sso key from external secret, without manual change in argocd-secrets
- target:
   kind: Deployment
   name: argocd-dex-server
  patch: |-
   - op: add
     path: /spec/template/spec/containers/0/envFrom
     value: [ {"secretRef": { "name": "github-sso-secret"}} ]

# for handling grpc and https on the same domain https://github.com/argoproj/argo-cd/issues/2953#issuecomment-602898868
- target:
    kind: Deployment
    name: argocd-server
  patch: |-
   - op: add
     path: /spec/template/spec/containers/0/command/-
     value: --insecure
